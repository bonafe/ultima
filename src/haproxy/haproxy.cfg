    global
        log stdout local0 debug
        daemon
        tune.bufsize 16384 #32768 #65536 #131072 
        ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
        ssl-default-bind-options no-sslv3 no-tls-tickets
        ssl-default-bind-options ssl-max-ver TLSv1.2
        ssl-default-bind-options ssl-min-ver TLSv1.1
        ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
  		ssl-default-server-options no-sslv3 no-tls-tickets
        

    defaults
        timeout connect 10s
        timeout client 30s
        timeout server 30s
        log global
        mode http
        option httplog

    cache MyCache
  		total-max-size 16 #16mb de arquivos de até 16kb é muuuuita coisa. 16kb de tamanho vem de tune.bufsize
  		max-age 240

    frontend httpsOrHttpToHttps
        bind *:80
        bind *:443  ssl crt /etc/ssl/certs/certificado-aplicacao.pem ca-file /etc/ssl/certs/trusted.pem verify optional #alpn h2,http/1.1 #crl-file /etc/ssl/certs/CRL/crl.pem

		#O acl não consegue acessar path. Salvando em txn, ele acessa		
		http-request set-var(txn.MyPath) path
		acl WeCanSafelyCacheThatFile var(txn.MyPath) -m end .js .css
		http-request cache-use MyCache if WeCanSafelyCacheThatFile
		http-response cache-store MyCache if WeCanSafelyCacheThatFile
		### A linha abaixo força a usar https
        http-request redirect scheme https unless { ssl_fc }
        default_backend servers

    backend servers
        timeout connect 5000ms
        timeout server 5000ms
        balance source #quando tiver mais de um servidor, o usuário continua usando o que usou quando fez a primeira conexão
        option forwardfor
        http-request add-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-Port            %[dst_port]
        http-request set-header X-SSL-Client-CN             %{+Q}[ssl_c_s_dn(cn)]
        http-response set-header X-Server-IP %[dst]
        http-response set-header X-Server-Port %[dst_port]
        http-response set-header X-Client-IP %[src]
        http-response set-header X-Client-Port %[src_port]

        # nosso POOL de (1, no momento) servers
        server server1 ultima:80
